<canvas
    id="wallpaper"
    class="-z-10 absolute h-full"
    style="image-rendering: pixelated;"
></canvas>
<script>
    function loadSprite(src: string) {
        return new Promise((resolve, reject) => {
            const img = new Image();
            img.src = src;
            img.onload = () => resolve(img);
            img.onerror = (err) => reject(err);
        });
    }
    type Position = {
        x: number;
        y: number;
    };
    interface Sprite {
        width: number;
        height: number;
        pos: Position;
        scale: number;
        draw: () => void;
    }
    type Layer = {
        head: Sprite;
        tail: Sprite;
    };

    function makeSprite(c: CanvasRenderingContext2D, sprite: HTMLImageElement, pos: Position, scale: number): Sprite {
        return {
            width: sprite.width,
            height: sprite.height,
            pos,
            scale,
            draw() {
                c.drawImage(sprite, this.pos.x, this.pos.y, this.width * scale, this.height * scale);
            },
        };
    }

    function makeLayer(c: CanvasRenderingContext2D, sprite: HTMLImageElement, pos: Position, scale: number): Layer {
        return {
            head: makeSprite(c, sprite, pos, scale),
            tail: makeSprite(c, sprite, { x: pos.x + sprite.width * scale, y: pos.y }, scale),
        };
    }

    function makeInfiniteScroll(dt: number, layer: Layer, speed: number) {
        if (layer.head.pos.x + layer.head.width * layer.head.scale < 0) {
            layer.head.pos.x = layer.tail.pos.x + layer.tail.width * layer.tail.scale;
        }
        if (layer.tail.pos.x + layer.tail.width * layer.tail.scale < 0) {
            layer.tail.pos.x = layer.head.pos.x + layer.head.width * layer.head.scale;
        }
        layer.head.pos.x += speed * dt;
        layer.head.draw();
        layer.tail.pos.x += speed * dt;
        layer.tail.draw();
    }

    async function main() {
        const config = [
            { src: "./wallpapers/nature_5/1.png", static: true },
            { src: "./wallpapers/nature_5/2.png", static: false },
            { src: "./wallpapers/nature_5/3.png", static: false },
            { src: "./wallpapers/nature_5/4.png", static: false },
        ];
        const body = document.querySelector("body") as HTMLBodyElement;
        const canvas = document.getElementById("wallpaper") as HTMLCanvasElement;
        new ResizeObserver(() => {
            if (body.clientWidth / body.clientHeight > 2) {
                canvas.classList.replace("h-full", "w-full");
            } else {
                canvas.classList.replace("w-full", "h-full");
            }
        }).observe(body);
        const c = canvas.getContext("2d");
        if (c) {
            c.imageSmoothingEnabled = false;

            const layers = (await Promise.all(config.map((layer) => loadSprite(layer.src)))) as Array<HTMLImageElement>;
            const layerObjects = layers.map((layer, index) => {
                const scale = canvas.width / layer.width;
                if (config[index].static) return makeSprite(c, layer, { x: 0, y: 0 }, scale);
                else return makeLayer(c, layer, { x: 0, y: 0 }, scale);
            });

            let dt: number;
            let timestamp_prev = 0;
            function loop(timestamp: number) {
                dt = (timestamp - timestamp_prev) / 1000;
                timestamp_prev = timestamp;
                c?.clearRect(0, 0, canvas.width, canvas.height);
                layerObjects.forEach((layerObject, index) => {
                    if (config[index].static == true) {
                        (layerObject as Sprite).draw();
                    } else {
                        makeInfiniteScroll(dt, layerObject as Layer, -25);
                    }
                });
                requestAnimationFrame(loop);
            }
            requestAnimationFrame(loop);
        }
    }
    main();
</script>
